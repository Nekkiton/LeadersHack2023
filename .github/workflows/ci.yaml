name: 'Project check & deploy'

on:
  push:
    branches:
      - main
      - deployment

jobs:
  # build-frontend:
  #   runs-on: self-hosted
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: frontend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Get node version
  #       id: node_version
  #       run: |
  #         echo "version=$(node -v)" >> $GITHUB_OUTPUT

  #     - name: Get node_modules cache
  #       uses: actions/cache@v3
  #       id: node_modules
  #       with:
  #         path: |
  #           **/node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node_version.outputs.version }}

  #     - name: Install yarn
  #       run: npm install -g yarn

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Check build
  #       run: yarn build
  # build-backend:
  #   runs-on: self-hosted
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: backend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Get node version
  #       id: node_version
  #       run: |
  #         echo "version=$(node -v)" >> $GITHUB_OUTPUT

  #     - name: Get node_modules cache
  #       uses: actions/cache@v3
  #       id: node_modules
  #       with:
  #         path: |
  #           **/node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node_version.outputs.version }}

  #     - name: Install yarn
  #       run: npm install -g yarn

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Run build check
  #       run: yarn build

  #     - name: Run test
  #       run: yarn test
  build-and-push:
    runs-on: self-hosted
    needs:
      # - build-frontend
      # - build-backend
    strategy:
        fail-fast: false
        matrix:
          include:
            - dockerfile: backend/deployment/Dockerfile
              context: backend
              image: swr.ru-moscow-1.hc.sbercloud.ru/geek-battle-2023/backend
            - dockerfile: frontend/deployment/Dockerfile
              context: frontend
              image: swr.ru-moscow-1.hc.sbercloud.ru/geek-battle-2023/frontend
    steps:      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
        
      - name: Login to docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: swr.ru-moscow-1.hc.sbercloud.ru/geek-battle-2023
          username: ru-moscow-1@D9TPYVB2YX73MZJUHE04
          password: 1bfc45a521e83d16f19727fdfcadae806218ef1b1cd59b8f54f3a28db42163a9

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
