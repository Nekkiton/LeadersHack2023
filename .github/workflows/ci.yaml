name: 'Project check & deploy'

on: 
  push:
    - main
    - deployment

jobs:
  build-frontend:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get node version
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"

      - name: Get node_modules cache
        uses: actions/cache@v3
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check build
        run: yarn build
  # build-backend:
  #   runs-on: self-hosted
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: backend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Get node version
  #       id: node
  #       run: |
  #         echo "::set-output name=version::$(node -v)"

  #     - name: Get node_modules cache
  #       uses: actions/cache@v3
  #       id: node_modules
  #       with:
  #         path: |
  #           **/node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}

  #     - name: Install yarn
  #       run: npm install -g yarn

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Run build check
  #       run: yarn build

  #     - name: Run test
  #       run: yarn test
  deploy-frontend:
    runs-on: self-hosted
    needs: 
      - build-frontend
    defaults:
      run:
        shell: bash
        working-directory: frontend
    env:
      HOME: "/root"
    steps:      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: swr.ru-moscow-1.hc.sbercloud.ru/geek-battle-2023/frontend
        
      - name: Login to docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: swr.ru-moscow-1.hc.sbercloud.ru/geek-battle-2023
          username: ru-moscow-1@D9TPYVB2YX73MZJUHE04
          password: 1bfc45a521e83d16f19727fdfcadae806218ef1b1cd59b8f54f3a28db42163a9

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployment/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
